[08/01, 15:50] Priya: import React, { useState, useEffect } from "react";
import axios from "axios";
import { useNavigate, useParams } from "react-router-dom";

const UpdateEmployee = () => {
  const { id } = useParams(); // Get employee ID from URL
  const navigate = useNavigate();
  const [employee, setEmployee] = useState({
    name: "",
    department: "",
    designation: "",
    salary: "",
  });

  useEffect(() => {
    // Fetch employee details by ID
    const fetchEmployee = async () => {
      try {
        const response = await axios.get(`http://localhost:8080/employees/${id}`);
        setEmployee(response.data);
      } catch (error) {
        console.error("Error fetching employee:", error);
      }
    };
    fetchEmployee();
  }, [id]);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setEmployee({ ...employee, [name]: value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      await axios.put(`http://localhost:8080/employees/${id}`, employee);
      navigate("/"); // Redirect to Employee List after update
    } catch (error) {
      console.error("Error updating employee:", error);
    }
  };

  return (
    <div>
      <h2>Update Employee</h2>
      <form onSubmit={handleSubmit}>
        <div>
          <label>Name:</label>
          <input
            type="text"
            name="name"
            value={employee.name}
            onChange={handleChange}
            required
          />
        </div>
        <div>
          <label>Department:</label>
          <input
            type="text"
            name="department"
            value={employee.department}
            onChange={handleChange}
            required
          />
        </div>
        <div>
          <label>Designation:</label>
          <input
            type="text"
            name="designation"
            value={employee.designation}
            onChange={handleChange}
            required
          />
        </div>
        <div>
          <label>Salary:</label>
          <input
            type="number"
            name="salary"
            value={employee.salary}
            onChange={handleChange}
            required
          />
        </div>
        <button type="submit">Update Employee</button>
      </form>
    </div>
  );
};

export default UpdateEmployee;
[08/01, 15:50] Priya: const handleDelete = async (id) => {
  const confirmDelete = window.confirm("Are you sure you want to delete this employee?");
  if (confirmDelete) {
    try {
      await axios.delete(`http://localhost:8080/employees/${id}`);
      setEmployees(employees.filter((emp) => emp.empId !== id)); // Remove employee from UI
    } catch (error) {
      console.error("Error deleting employee:", error);
    }
  }
};
[08/01, 15:51] Priya: <tbody>
  {employees.map((emp) => (
    <tr key={emp.empId}>
      <td>{emp.empId}</td>
      <td>{emp.name}</td>
      <td>{emp.department}</td>
      <td>{emp.designation}</td>
      <td>{emp.salary}</td>
      <td>
        <button onClick={() => navigate(`/update-employee/${emp.empId}`)}>
          Update
        </button>
        <button onClick={() => handleDelete(emp.empId)}>Delete</button>
      </td>
    </tr>
  ))}
</tbody>
[08/01, 15:51] Priya: /* Table Styling */
table {
  width: 100%;
  border-collapse: collapse;
  margin: 20px 0;
  font-size: 18px;
  text-align: left;
}

table th,
table td {
  padding: 12px 15px;
  border: 1px solid #ddd;
}

table th {
  background-color: #f4f4f4;
  color: #333;
}

table tr:hover {
  background-color: #f1f1f1;
}

button {
  padding: 8px 12px;
  margin-right: 5px;
  border: none;
  color: #fff;
  background-color: #007bff;
  cursor: pointer;
  border-radius: 4px;
  font-size: 14px;
}

button:hover {
  background-color: #0056b3;
}

button.delete {
  background-color: #dc3545;
}

button.delete:hover {
  background-color: #c82333;
}

/* Page Layout */
div {
  margin: 20px auto;
  max-width: 800px;
}
