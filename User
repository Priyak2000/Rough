app.jsx

import React, { useState, useEffect } from "react";
import "./app.css";
import UserList from "./components/UserList";
import UserForm from "./components/UserForm";
import axios from "axios";

function App() {
  const [users, setUsers] = useState([]);
  const [editingUser, setEditingUser] = useState(null);

  // Fetch users from JSON server
  useEffect(() => {
    axios.get("http://localhost:5000/users")
      .then((response) => setUsers(response.data))
      .catch((error) => console.error("Error fetching users:", error));
  }, []);

  const addUser = (user) => {
    axios.post("http://localhost:5000/users", user)
      .then((response) => setUsers([...users, response.data]))
      .catch((error) => console.error("Error adding user:", error));
  };

  const deleteUser = (id) => {
    axios.delete(`http://localhost:5000/users/${id}`)
      .then(() => setUsers(users.filter((user) => user.id !== id)))
      .catch((error) => console.error("Error deleting user:", error));
  };

  const editUser = (user) => {
    setEditingUser(user);
  };

  const updateUser = (updatedUser) => {
    axios.put(`http://localhost:5000/users/${updatedUser.id}`, updatedUser)
      .then(() => {
        setUsers(users.map((user) => (user.id === updatedUser.id ? updatedUser : user)));
        setEditingUser(null);
      })
      .catch((error) => console.error("Error updating user:", error));
  };

  return (
    <div className="app-container">
      <h1>User Management System</h1>
      <UserForm addUser={addUser} editingUser={editingUser} updateUser={updateUser} />
      <UserList users={users} deleteUser={deleteUser} editUser={editUser} />
    </div>
  );
}

export default App;

//user form
import React, { useState, useEffect } from "react";

function UserForm({ addUser, editingUser, updateUser }) {
  const [user, setUser] = useState({ name: "", email: "" });

  useEffect(() => {
    if (editingUser) {
      setUser(editingUser);
    }
  }, [editingUser]);

  const handleSubmit = (e) => {
    e.preventDefault();
    if (editingUser) {
      updateUser(user);
    } else {
      addUser(user);
    }
    setUser({ name: "", email: "" });
  };

  return (
    <form onSubmit={handleSubmit} className="user-form">
      <input
        type="text"
        placeholder="Enter Name"
        value={user.name}
        onChange={(e) => setUser({ ...user, name: e.target.value })}
        required
      />
      <input
        type="email"
        placeholder="Enter Email"
        value={user.email}
        onChange={(e) => setUser({ ...user, email: e.target.value })}
        required
      />
      <button type="submit">{editingUser ? "Update User" : "Add User"}</button>
    </form>
  );
{
  "users": [
    {
      "id": 1,
      "name": "John Doe",
      "email": "john.doe@example.com"
    },
    {
      "id": 2,
      "name": "Jane Smith",
      "email": "jane.smith@example.com"
    }
  ]
}

//css


.app-container {
  max-width: 600px;
  margin: 0 auto;
  text-align: center;
  font-family: Arial, sans-serif;
}

h1 {
  color: #333;
}

.user-form {
  margin-bottom: 20px;
}

.user-form input {
  margin: 5px;
  padding: 10px;
  width: calc(100% - 22px);
  border: 1px solid #ccc;
  border-radius: 5px;
}

.user-form button {
  padding: 10px 20px;
  margin-top: 10px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

.user-form button:hover {
  background-color: #0056b3;
}

.user-list {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.user-card {
  background: #f9f9f9;
  padding: 15px;
  border: 1px solid #ddd;
  border-radius: 5px;
}

.user-card h3 {
  margin: 0;
  color: #444;
}

.user-card p {
  margin: 5px 0;
  color: #666;
}

.actions button {
  margin: 5px;
  padding: 5px 10px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

.actions button:first-child {
  background-color: #007bff;
  color: white;
}

.actions button:first-child:hover {
  background-color: #0056b3;
}

.actions button:last-child {
  background-color: #dc3545;
  color: white;
}

.actions button:last-child:hover {
  background-color: #a71d2a;
}

//userlist

import React from "react";

function UserList({ users, deleteUser, editUser }) {
  return (
    <div className="user-list">
      {users.length === 0 ? (
        <p>No users available. Add some!</p>
      ) : (
        users.map((user) => (
          <div key={user.id} className="user-card">
            <h3>{user.name}</h3>
            <p>{user.email}</p>
            <div className="actions">
              <button onClick={() => editUser(user)}>Edit</button>
              <button onClick={() => deleteUser(user.id)}>Delete</button>
            </div>
          </div>
        ))
      )}
    </div>
  );
}

export default UserList;
